services:

  backend:
    container_name: task-tracker-backend
    build: backend
    ports:
      - 8080:8080
    volumes:
      - ${USER_PHOTOS_DIR}:/var/task-tracker/photos/
    environment:
      PORT: ${PORT}
      JWT_KEY: ${JWT_KEY}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION}
      USER_PHOTOS_DIR: /var/task-tracker/photos/

      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}

      MAIL_SMTP_CONNECTION_TIME_OUT: ${MAIL_SMTP_CONNECTION_TIME_OUT}
      MAIL_SMTP_TIME_OUT: ${MAIL_SMTP_TIME_OUT}
      MAIL_SMTP_WRITE_TIME_OUT: ${MAIL_SMTP_WRITE_TIME_OUT}
    networks:
      - app_network
    depends_on:
      - postgres

  postgres:
    container_name: task-tracker-postgres
    image: postgres:16.2-alpine3.19
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - task_tracker_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app_network

  kafka:
    container_name: task-tracker-kafka
    image: 'bitnami/kafka:latest'
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    volumes:
      - task_tracker_kafka_data:/bitnami/kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

networks:
  app_network:
    driver: bridge
volumes:
  task_tracker_postgres_data:
  task_tracker_kafka_data: